####Installation du système de base

#setup d'installation :
Si l'on dispose d'un second pc sous la main faire les manip suivante depuis un ssh permet de bénéficier du copier/coller
Sinon tout faire à la main

ssh:
ip a -> trouver l'ip (dhcp par défaut si connecté en ethernet sinon voir le wiki pour setup une connection wifi)
passwd -> changer le mdp root
se ssh en root

#partitionnement des disques :

//On part sur un UEFI/GPT avec chiffrement de la parition principal et LVM
//le swap sera ici une partition du double du nombre de Gb de RAM
//shema du partitionnement :
/dev/sda
|--> /boot          /dev/sda1 EFI        boot 512 MB fat32     GRUB, kernel et EFI
|--> LUKS encrypted /dev/sda2 linux fs        100%   encrypted block device chiffré
     |-->  LVM                           lvm  100%
           |--> /                        root 25%    ext4      Tous les fichiers systèmes
           |--> /home                    home 75%    ext4      fichiers utilisateurs

fdisk /dev/sda
g
w
cfdisk
//entrer les nouvelles partitions
//sda1 512MB de type EFI
//sda2 le reste en gardant le type par defaut (linux filesystems)
write

#formatage, chiffrement création du LVM:
!!!le mot de passe doit être saissie comme si on utilisait un clavier qwerty

mkfs.fat -F 32 /dev/sda1
cryptsetup luksFormat --type luks1 --use-random -S 1 -s 512 -h sha512 -i 5000 /dev/sda2
cryptsetup open /dev/sda2 cryptlvm
pvcreate /dev/mapper/cryptlvm
vgcreate vg /dev/mapper/cryptlvm
lvcreate -L (nb de giga)G vg -n root
lvcreate -l 100%FREE vg -n home
mkfs.ext4 /dev/vg/root
mkfs.ext4 /dev/vg/home

#montage:

mount /dev/vg/root /mnt
mount --mkdir /dev/vg/home /mnt/home
mount --mkdir /dev/sda1 /mnt/boot

#selection des mirroirs du gestionnaire de paquets

reflector --country France --age 12 --sort rate --save /etc/pacman.d/mirrorlist
//ignorer les erreurs 403

#installation du système de base
!!!on peut git clone le repository  et modifier le script pacstrap
!!!utile pour installer les bons driver de gpu 
!!!sway ne fonctionne sous NVIDIA qu'avec nouveau, le driver open source. (pas conseiller pour le gaming)

pacstrap /mnt base linux linux-firmware mkinitcpio lvm2 vim dhcpcd wpa_supplicant

#montage automatique des partitions

genfstab -U /mnt >> /mnt/etc/fstab
vim /mnt/etc/fstab
//remplacer les "rw, relatime" par "noatime"

#entrer dans le nouveau système

arch-chroot /mnt

#swapfile

//taille du swap = racine carré de la RAM (en GB)
dd if=/dev/zero of=/swapfile bs=1M count=(valeur en MiB e.g. 4096 pour 4G) status=progress
chmod 0600 /swapfile
mkswap -U clear /swapfile
swapon /swapfile
vim /etc/fstab
//le swapfile doit être comme suit
/swapfile none swap sw 0 0

#fuseau horaire

ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime
hwclock --systohc

#locales

vim /etc/locale.gen
//dé-commenter fr_FR UTF-8
locale-gen
vim /etc/locale.conf
//insérer LANG=fr_FR.UTF-8
vim /etc/vconsole.conf
//insérer KEYMAP=fr-latin9

#nom de la machine

vim /etc/hostname
//entrer le nom de l'ordi

#initramfs

vim /etc/mkinitcpio.conf
//modifier comme suit :
//HOOKS=(base udev autodetect keyboard modconf block encrypt lvm2 filesystems fsck)
mkinitcpio -p linux

#le bootloader

pacman -S grub
vim /etc/default/grub
//dé-commenter GRUB_ENABLE_CRYPTODISK=y
blkid
vim /etc/default/grub
//ajouter dans les gillemet de GRUB_CMDLINE_LINUX=
//cryptdevice=UUID='UUID de /dev/sda2':cryptlvm root=/dev/vg/root
pacman -S efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot

#maj du microcode automatique

pacman -S intel-ucode
//amd-ucode pour AMD

#génération de la config GRUB

grub-mkconfig -o /boot/grub/grub.cfg

#installer le zsh

pacman -S zsh

#ajouter un utilisateurs
!!!On crée ici un compte administrateur. Voir le wiki pour les différents groupes d'utilisateurs
useradd -m -G wheel -s /bin/zsh *nom*

#config zsh

su *nom du crée*
//suivre les idications (1 -> 4 ... -> 0 -> 0)

#mot de passe

exit
passwd *nom du compte*
passwd root

#installer sudo
!!!Dans la continuité de notre compte administrateur on lui donne ici accès aux commandes root sans mdp 

pacman -S sudo
chmod 700 /etc/sudoers
vim /etc/sudoers
//de-commenter la ligne 85 %wheel ALL=(ALL:ALL) NOPASSWD: ALL

#outils de base nécessaire à diverses installations

sudo pacman -S --needed base-devel
//tous prendre

#networkmanager

pacman -S networkmanager openssh man
systemctl enable NetworkManager
//wifi avec nmcli et nmtui

reboot

#démarrer sur l'os nouvellement installé

####Installation du rice et des utilitaires
!!!!je n'installe pas de display manager
!!tout installer en utilisateur
donc se ssh en utilisateur ou se connecter sur le compte utilisateur

#activer le ssh
sudo systemctl start sshd

sudo pacman -S sway waybar mako kitty git xorg-xwayland wofi qt5-wayland light

#FiraCode Nerd Font
git clone  https://aur.archlinux.org/nerd-fonts-fira-code.git
cd nerd-fonts-fira-code
makepkg -si

#prezto
git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"
/en une commande
setopt EXTENDED_GLOB
for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do
  ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"
done
/ignorer les erreurs de fichier existant, on remplace a la fin les liens symbolique dans ~ par les deux .zsh du dépôt

#starship
sudo pacman -S starship
zsh
//et profiter de la beauté du nouveau shell

#nvim
sudo pacman -S neovim wl-clipboard
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

#utilitaires
sudo pacman -S ripgrep imv fzf less ranger mpv htop neofetch python-pip
-> pipewire-jack, wireplumber
pip install pillow
git clone https://aur.archlinux.org/buku.git
cd buku
makepkg -si
sudo pacman -S zathura zathura-cb zathura-djvu zathura-pdf-mupdf zathura-ps 

#autres
sudo pacman -S neomutt todoman khal libnotify

#Navigateurs
sudo pacman -S amfora firefox elinks

#daemon de fond d'ecran: wpaperd
git clone https://aur.archlinux.org/wpaperd.git
cd wpaperd
makepkg -si
//modifier le fichier output.conf avec les bons paramètres

#son
sudo pacman -S pipewire-pulse

#chiffrement des requêtes DNS
sudo pacman -S dnscrypt-proxy bind
=> modifier /etc/dnscrypt-proxy/dnscrypt-proxy.toml en fonction de ses besoins
(pour moi juste autoriser les serveurs sous ipv6 en imposer le DNSSEC)
=> ajouter un fichier /etc/NetworkManager/conf.d/dns.conf qui contient:
[main]
dns=none
=> modifer /etc/resolv.conf comme suit:
nameserver ::1
nameserver 127.0.0.1
//l'activer au démarrage
sudo systemctl enable dnscrypt-proxy
//et l'activer maintenant sinon plus de dns
sudo systemctl start dnscrypt-proxy

#carnet d'adresse neomutt
git clone https://aur.archlinux.org/abook.git
cd abook
makepkg -si

#outils pour vérifier la santé du disque dur
sudo pacman -S smartmontools
=> voir https://wiki.archlinux.org/title/S.M.A.R.T._(Fran%C3%A7ais) pour les test

#installation du lock screen
git clone https://aur.archlinux.org/swaylock-effects-git.git
cd swaylock-effects
makepkg -si

//copier coller les dots du dépot vers ~
//virer les dossier d'installation git

reboot
après l'identification entrer sway pour charger l'interface graphique

!!!en cas d'erreur dans les fichier .zshenv et/ou .zshrc au démarrage les supprimer et les recréer en copiant le contenu avec éditeur de texte
!!!en cas d'erreur de sway au démarrage (permsision denied) installer polkit -> sudo pacman -S polkit

#pour les jeux voir steam, wine, lutris, heroic, legendary...
-> indice: activer le support proton dans steam
